root="E:/yangjinqing/"
init.data<-read.csv(file=paste(root,"APP数据.csv",sep=""),header =T)
item<-c();category <-c()
for(i in 1:nrow(init.data)){
tmp<-strsplit(as.character(init.data$item[i]),split="\\.")[[1]]
item<-c(item,tmp[2])
category<-c(category,tmp[1])}


init.data$item<-item
init.data<-cbind(init.data,category=category)
init.data<-cbind(init.data,categoryid=as.numeric(as.factor(init.data$category)))
init.data<-cbind(init.data,itemid=as.numeric(as.factor(init.data$item)))
//转化格式
library('reshape')
init.data<-cbind(init.data,value=1)
car.matrix<-cast(init.data,carid~itemid,value="value",fill=0)
car.matrix[,-1]<-ifelse(car.matrix[,-1]>=1,1,0)
//建立空关系网络并设置点数据
library(igraph)
num.item<-ncol(car.matrix)-1
data.g<-graph.empty(directed=F)
data.g<-add.vertices(data.g,num.item)

item<-c();category <-c()
for(i in V(data.g)){
category<-c(category,init.data$categoryid[which(init.data$itemid==i)[1]])
item<-c(item,init.data$itemid[which(init.data$itemid==i)[1]])
}
V(data.g)$category<-category
V(data.g)$item<-item
添加线数据
edges<-c()
for(i in 1:nrow(car.matrix)){
item.i<-as.numeric(colnames(car.matrix)[which(car.matrix[i,]==1)])
item.i.num<-length(item.i)
from<-c();to<-c()
for(m in 1:(item.i.num-1)){
  from<-c(from,item.i[-c((item.i.num-m+1):item.i.num)])
  to<-c(to,item.i[-c(1:m)])
     }
edges<-rbind(edges,matrix(c(from,to),nc=2))
}
data.g<-add.edges(data.g,t(edges[-1,]))
E(data.g)$weight<-count.multiple(data.g)
data.g<-simplify(data.g,remove.multiple = TRUE,remove.loops = TRUE,edge.attr.comb = 'mean')
//社群发现并绘制关系图
member<-walktrap.community(data.g)
V(data.g)$member<-member$membership
member.num<-length(table(V(data.g)$member))
member.num

mem.col<-rainbow(length(unique(V(data.g)$category)),alpha=0.3)
V(data.g)$color<-mem.col[V(data.g)$category]
member.list<-list()
for(i in 1 : member.num){
   member.list<-c(member.list,list(which(V(data.g)$member==i)))
   }

//
svg(filename=paste(root,"test9.svg",sep=""),width = 14,height = 14)
plot(data.g,vertex.size=6,layout=layout.fruchterman.reingold,vertex.color=(data.g)$color,edge.width=scale(E(data.g)$weight
,center=F)+1,mark.groups=member.list)
legend("topleft",legend=unique(V(data.g)$category),pch=15,col=mem.col,bty="n",cex=1)
dev.off

svg(filename=paste(root,"test9.svg",sep=""),width = 14,height = 14)
par(mfcol=c(1,4))
for(i in 1:length(table(member$membership))){
  tmp.g<-induced.subgraph(data.g,which(V(data.g)$member==i));
  member.list<-list()
  tmp.category<-as.numeric(names(table(V(tmp.g)$category)))
  for(j in tmp.category){
     member.list<-c(member.list,list(which(V(tmp.g)$member==j)))
  }
  plot(data.g,vertex.size=10,layout=layout.fruchterman.reingold,edge.width=scale(E(data.g)$weight
,center=F)+1,mark.groups=member.list,vertex.label=V(tmp.g)$item)
  legend("topleft",legend=unique(V(data.g)$category),pch=15,col=mem.col,bty="n",cex=1)
}
dev.off

use.category.name<-c(Entertainment_Leisure,General_utility,Learning_Tools,Net_Shopping_Paying,Search_Tools,Social_Communication,System_Magement)
